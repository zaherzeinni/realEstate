'use client'

import React, { useMemo, useState, useEffect, useRef } from "react"
import ModalVideo from "react-modal-video"
import { Swiper, SwiperSlide } from "swiper/react"
import useServices from "@/hooks/useServices"
import { useLanguageContext } from "@/context/languageContext"
import { ImageEndpoint } from "../../../utils/global"
import SwiperCore, { Autoplay, EffectFade, Navigation, Pagination } from "swiper"
import Link from "next/link"

SwiperCore.use([Autoplay, EffectFade, Navigation, Pagination])

export default function Home2Activities() {
  const [isOpen, setOpen] = useState(false)
  const { language } = useLanguageContext()
  const [activeIndex, setActiveIndex] = useState(0)
  const [activeTab, setActiveTab] = useState(0)
  const [activeImage, setActiveImage] = useState(0)
  const swiperRef = useRef(null)
  const { data, isLoading, error } = useServices({
    page: 1,
    search: "",
  })

  const settings = useMemo(() => {
    return {
      slidesPerView: 1,
      speed: 1500,
      spaceBetween: 25,
      effect: "fade",
      loop: true,
      fadeEffect: {
        crossFade: true,
      },
      autoplay: false, // Disable Swiper's built-in autoplay
      pagination: {
        el: ".swiper-pagination5",
        clickable: true,
      },
      onSlideChange: (swiper) => {
        setActiveIndex(swiper.realIndex)
      },
    }
  }, [])

  useEffect(() => {
    if (swiperRef.current && swiperRef.current.swiper) {
      swiperRef.current.swiper.autoplay.stop() // Ensure Swiper's autoplay is stopped
    }
  }, [data])

  useEffect(() => {
    const interval = setInterval(() => {
      if (data?.books && data.books.length > 0) {
        const currentService = data.books[activeIndex]
        if (currentService.image && currentService.image.length > 0) {
          setActiveImage((prevActiveImage) => (prevActiveImage + 1) % currentService.image.length)
        }
      }
    }, 2000)

    return () => clearInterval(interval)
  }, [data, activeIndex])

  useEffect(() => {
    if (swiperRef.current && swiperRef.current.swiper) {
      swiperRef.current.swiper.slideTo(activeImage)
    }
  }, [activeImage])

  return (
    <div className="slider-and-tab-section mb-120">
      <div className="row g-0">
        <div className="col-lg-5">
          
          <ul className="activities-slider-group">
            {data?.books?.map((service, index) => (
              <li key={index} className={index === activeImage ? "active" : ""}>
                <div className="slider-area">
                  <Swiper {...settings} ref={swiperRef} className="swiper activities-img-slider">
                    <div className="swiper-wrapper">
                      {service.image.map((img, imgIndex) => (
                        <SwiperSlide key={imgIndex} className="swiper-slide">
                          <div
                            className="slide-img"
                            style={{
                              backgroundImage: `linear-gradient(180deg, rgba(16, 12, 8, 0.4) 0%, rgba(16, 12, 8, 0.4) 100%), url(${ImageEndpoint}/${img})`,
                            }}
                          />
                          {index} - {activeImage}
                        </SwiperSlide>
                      ))}
                    </div>
                  </Swiper>
                  <div className="swiper-pagination5 pagination1" />
                </div>
              </li>
            ))}
          </ul>
        </div>
        <div className="col-lg-7">
          <div className="tab-area">
            <div className="section-title2 text-center mb-50">
              <div className="eg-section-tag">
                <span>{language === "en" ? "What We Do" : "Ce que nous faisons"}</span>
              </div>
              <h2>{language === "en" ? "Our Services" : "Nos services"}</h2>
            </div>

            {data?.books?.length && (
                <div className="tab-content-area">
                  <div className="row g-xl-4 gy-5 ">
                    <div className="col-xl-5">
                      <div className="tab-sidebar">
                        <ul
                          className="nav nav-pills !bg-transparent"
                          id="pills-tab3"
                          role="tablist"
                        >
                          {data?.books?.map((service, index) => {
                            return (
                              <li
                                key={index}
                                className="nav-item"
                                role="presentation"
                              >
                                <div
                                  onClick={() => handleTabClick(index)}
                                  //className={`nav-link ${activeTab === 'cultural' ? 'active' : ''}`}
                                  className={`nav-link ${
                                    activeTab === index ? "active" : ""
                                  }`}
                                >
                                  <div className="icon">
                                    <svg
                                      xmlns="http://www.w3.org/2000/svg"
                                      width={33}
                                      height={33}
                                      viewBox="0 0 54 54"
                                    >
                                      <path d="M25.498 10.0585C25.0293 8.61417 24.1913 7.57563 23.0754 7.05472C22.059 6.58116 20.861 6.54959 19.6116 6.96329C17.1179 7.78939 15.9349 9.87567 16.5235 12.4079C16.5678 12.5986 16.6211 12.7913 16.6823 12.9788C17.0209 14.0219 17.6258 15.0828 18.3856 15.9655C18.5803 16.1924 18.7821 16.4042 18.9891 16.5995C19.2502 16.8468 19.5198 17.0678 19.7952 17.2605C19.8779 17.3191 19.9625 17.3756 20.0465 17.4283C20.15 17.4934 20.2692 17.5269 20.389 17.5269C20.445 17.5269 20.501 17.5197 20.5557 17.5052C20.5778 17.4993 20.5993 17.4934 20.6214 17.4881C20.736 17.4572 20.8519 17.4282 20.9671 17.4C21.0192 17.3868 21.0707 17.3743 21.1221 17.3625C21.1481 17.3559 21.1748 17.35 21.2009 17.3441C21.253 17.3316 21.3044 17.3191 21.3565 17.3079C21.378 17.3026 21.4001 17.298 21.4216 17.2934C21.5095 17.2737 21.5974 17.2546 21.6859 17.2362C21.7452 17.2237 21.8051 17.2112 21.865 17.1994C21.9249 17.1869 21.9841 17.175 22.044 17.1638C22.1358 17.1461 22.2283 17.129 22.3207 17.1125C22.4282 17.0928 22.5363 17.0737 22.645 17.0566C22.7453 17.0402 22.8455 17.0244 22.9464 17.0093C22.9777 17.0047 23.0083 17.0001 23.0395 16.9955C23.0441 16.9942 23.0493 16.9935 23.0545 16.9935C23.1053 16.9856 23.1554 16.9784 23.2062 16.9718C23.3234 16.9554 23.4406 16.9402 23.5578 16.9264C23.6333 16.9172 23.7082 16.9087 23.7837 16.9001C23.8586 16.8922 23.9341 16.8843 24.009 16.8764C24.1594 16.8613 24.3105 16.8481 24.4609 16.8363C24.666 16.8205 24.8515 16.7074 24.9616 16.5311C25.1608 16.2115 25.3301 15.8524 25.4668 15.4656C26.0339 13.8726 26.0658 11.8074 25.498 10.0585ZM24.0149 15.5551C23.9042 15.5656 23.7935 15.5768 23.6828 15.5886C23.6275 15.5945 23.5721 15.6005 23.5168 15.607C23.4615 15.6129 23.4061 15.6195 23.3514 15.6268C23.2778 15.636 23.2043 15.6452 23.1307 15.655C23.0825 15.6616 23.035 15.6682 22.9868 15.6748C22.9823 15.6748 22.977 15.6754 22.9718 15.6767C22.9419 15.6807 22.9126 15.6846 22.8826 15.6892C22.8774 15.6899 22.8716 15.6906 22.8664 15.6919C22.8071 15.7004 22.7485 15.709 22.6893 15.7182C22.63 15.7267 22.5714 15.7359 22.5135 15.7458C22.4067 15.7622 22.2999 15.7807 22.1931 15.7991C22.156 15.8057 22.1183 15.8122 22.0811 15.8195C22.0733 15.8201 22.0662 15.8214 22.0584 15.8234C21.9763 15.8385 21.8936 15.8537 21.8116 15.8695C21.7764 15.876 21.7413 15.8826 21.7061 15.8898C21.475 15.9352 21.2439 15.9846 21.0147 16.0372C20.9606 16.0497 20.9059 16.0622 20.8519 16.0753C20.7367 16.1023 20.6221 16.1299 20.5075 16.1589C20.1123 15.878 19.7294 15.5228 19.3687 15.1026C18.7202 14.3488 18.2052 13.4491 17.9194 12.5677C17.8699 12.4158 17.8263 12.2612 17.7911 12.1073C17.1765 9.46196 19.1428 8.50301 20.0172 8.21362C20.331 8.10904 20.794 7.9946 21.3083 7.9946C22.354 7.9946 23.6112 8.46881 24.261 10.4683C24.8053 12.1461 24.6953 14.2206 24.0149 15.5544V15.5551Z" />
                                      <path d="M26.2996 43.8645C26.0958 43.4265 25.7754 43.0384 25.3496 42.7503C24.2206 41.9867 22.7349 42.1676 21.8168 43.1798L19.0647 46.2158L16.3633 49.196L16.8223 49.6209L16.5971 49.6393L16.1927 49.6406C16.1927 49.6511 16.1927 49.6616 16.1934 49.6728V49.6807C16.1941 49.6866 16.1947 49.6919 16.1947 49.6978C16.306 50.9856 16.9161 52.1426 17.9123 52.9542C18.7515 53.6382 19.7692 53.9999 20.8285 53.9999C21.0271 53.9999 21.2269 53.9875 21.4268 53.9618L21.4685 53.9565C21.6677 53.9309 21.8435 53.8145 21.9464 53.6402L25.9636 46.815L26.1772 46.452C26.6577 45.6371 26.6746 44.6676 26.2996 43.8645ZM20.9958 52.6806C20.1748 52.7207 19.3785 52.4589 18.73 51.9308C18.0842 51.4039 17.6636 50.6765 17.5275 49.8603L22.7772 44.0684C23.2577 43.5389 24.0344 43.4442 24.625 43.8435C25.2559 44.2703 25.446 45.1207 25.0579 45.7798L20.9958 52.6806Z" />
                                      <path d="M36.4141 36.583L31.7295 42.0421L30.6123 41.2949C29.8818 40.8062 28.8973 41.0147 28.422 41.7579L28.0952 42.2683L21.7191 38.5298C21.9952 37.7018 21.9965 36.8014 21.7171 35.9674C21.4307 35.111 21.1273 34.1909 20.8102 33.2411C21.8636 31.0187 23.9152 29.3007 26.2747 28.6759C28.6134 28.057 31.2093 28.5233 33.1977 29.9098C33.3814 31.0871 33.5604 32.1645 33.7128 33.0313C33.882 33.9975 34.3834 34.8716 35.1289 35.4997L36.4141 36.583Z" />
                                      <path d="M37.0633 36.5297C37.049 36.3541 36.9657 36.191 36.8316 36.0779L35.5463 34.9946C34.9193 34.4671 34.4961 33.7291 34.3542 32.9162C34.3203 32.7248 34.2858 32.5281 34.2513 32.3249V32.3243C34.1549 31.7606 34.0553 31.1568 33.9557 30.5333C33.9173 30.2939 33.8789 30.0512 33.8411 29.8072C33.8131 29.6296 33.7142 29.4711 33.5677 29.3685C33.1803 29.0981 32.772 28.8607 32.3482 28.6568C30.8702 27.9445 29.2047 27.6406 27.577 27.784C27.4357 27.7965 27.2958 27.8123 27.1551 27.832C27.1545 27.8314 27.1538 27.832 27.1538 27.832C27.0327 27.8478 26.9129 27.8669 26.7925 27.8886C26.7918 27.8886 26.7918 27.8886 26.7918 27.8886C26.6232 27.9189 26.4552 27.9544 26.2885 27.9945C26.2286 28.009 26.1687 28.0241 26.1095 28.0399C24.0403 28.5878 22.1984 29.9052 20.9698 31.6705C20.6866 32.077 20.4366 32.5071 20.223 32.957C20.1501 33.1115 20.139 33.2891 20.1931 33.4516C20.3441 33.9021 20.4913 34.3461 20.6351 34.7795C20.7947 35.2603 20.9496 35.7279 21.1007 36.1778C21.3318 36.8691 21.3325 37.6294 21.102 38.32V38.3207C21.1013 38.3226 21.1007 38.3246 21.1 38.3266C21.0056 38.6206 21.1267 38.9429 21.3924 39.0988L22.0343 39.475L27.1779 42.4906L27.7684 42.8372C27.8713 42.8971 27.9833 42.926 28.0946 42.926C28.3088 42.926 28.5178 42.8195 28.6422 42.6254L28.969 42.1151C29.1038 41.9039 29.3122 41.7592 29.555 41.7079C29.7979 41.6566 30.0459 41.7046 30.253 41.8434L31.3703 42.5906C31.6431 42.7728 32.0077 42.7228 32.2219 42.4729L32.7076 41.9072L36.4878 37.5018L36.9064 37.0138C37.0204 36.8803 37.077 36.706 37.0633 36.5297ZM30.9718 40.7463C30.4724 40.4122 29.8747 40.2965 29.2887 40.4208C28.7086 40.5431 28.2105 40.8851 27.8856 41.385L25.922 40.234L24.7936 39.5717L22.4777 38.2141C22.6463 37.4012 22.5982 36.5462 22.3338 35.7569C22.1834 35.3077 22.0291 34.8407 21.8696 34.3612C21.7531 34.0106 21.6346 33.6528 21.5135 33.2904C22.5194 31.3456 24.3431 29.8677 26.4396 29.3119C26.4695 29.304 26.4988 29.2961 26.5288 29.2889C26.9702 29.1777 27.4214 29.1087 27.8746 29.0791C29.5218 28.9732 31.2023 29.3981 32.5995 30.2978C32.7056 30.9733 32.8131 31.6337 32.9179 32.2519C32.9179 32.2552 32.9185 32.2578 32.9192 32.2605C32.9706 32.567 33.0214 32.8629 33.0715 33.1457C33.2675 34.2632 33.8502 35.2787 34.7116 36.0048L35.4877 36.6586L33.7916 38.6351L32.9361 39.6322L31.6125 41.1745L30.9718 40.7463Z" />
                                      <path d="M27.5452 41.9116L24.8668 46.1011L25.9606 46.8147L28.6391 42.6252L27.5452 41.9116Z" />
                                      <path d="M43.2389 49.6065C42.3658 49.6065 41.4842 49.3559 40.7055 48.835L31.3702 42.5899L32.089 41.4935L41.4243 47.7386C42.8795 48.712 44.838 48.368 45.8823 46.9552L50.6274 40.5392C50.8045 40.2991 50.8983 40.0143 50.8983 39.7157C50.8983 39.3395 50.7511 38.9876 50.4848 38.7259C49.9789 38.2286 49.1905 38.2017 48.652 38.6627L44.8542 41.9125C43.9538 42.6833 42.6418 42.6886 41.7362 41.925L35.9975 37.0881L36.8315 36.0779L42.5702 40.9147C42.9895 41.2679 43.5957 41.2653 44.0124 40.9088L47.8102 37.659C48.863 36.758 50.4034 36.8112 51.3924 37.7827C51.9133 38.2944 52.2004 38.981 52.2004 39.7157C52.2004 40.3004 52.0175 40.8575 51.6704 41.3265L46.9253 47.7425C46.0268 48.958 44.6433 49.6065 43.2389 49.6065Z" />
                                      <path d="M20.193 33.4516C19.0347 29.9834 17.7957 26.4455 16.5736 24.0008C15.9948 23.7331 13.798 22.8347 9.0998 20.9957C8.04635 20.584 7.08209 19.9914 6.23438 19.2356L0.829059 14.4178C0.33814 13.9805 0.045151 13.376 0.00478369 12.7157C-0.0355836 12.056 0.180577 11.4193 0.613549 10.924C1.07842 10.3926 1.74774 10.0874 2.45091 10.0874C2.9542 10.0874 3.43796 10.2413 3.85075 10.532L10.1865 14.992C10.3349 15.096 10.5009 15.1663 10.6793 15.1992L18.3635 16.6311C18.5855 16.6725 18.816 16.6574 19.0308 16.587C19.4215 16.4594 19.8225 16.3404 20.2223 16.2338C21.574 15.8727 22.966 15.6346 24.36 15.5254C24.9388 15.4801 25.528 15.457 26.1101 15.4564C26.5014 15.4557 26.8745 15.2847 27.1336 14.9868L31.0824 10.4419C31.3604 10.1216 31.5297 9.71055 31.5584 9.28501L32.0265 2.25334C32.1105 0.983946 33.1555 0 34.4114 0C34.4218 0 34.4323 0 34.442 0C35.7442 0.016443 36.8035 1.09905 36.8035 2.41448C36.8035 2.42632 36.8035 2.43882 36.8029 2.45132C36.8029 2.45526 36.8029 2.45789 36.8029 2.46184L36.6616 9.81645C36.6355 11.1635 36.2944 12.5059 35.6745 13.699C33.7037 17.4887 32.828 19.256 32.6392 19.7033C32.7004 21.6074 33.1477 25.3695 33.8404 29.8078L32.5539 30.013C32.2166 27.8517 31.4295 22.5696 31.3377 19.7612C31.296 19.5296 31.3904 19.3073 31.4457 19.1791C31.4985 19.0561 31.5753 18.8877 31.6821 18.666C31.865 18.2839 32.1346 17.74 32.4829 17.0507C33.1405 15.7504 33.9544 14.1778 34.5215 13.0879C35.0475 12.0751 35.3379 10.9352 35.3594 9.79145L35.5007 2.44145C35.5007 2.43158 35.5007 2.42172 35.5013 2.41185V2.41514C35.5013 1.81662 35.0189 1.32333 34.4257 1.31609C33.8495 1.30952 33.3638 1.7594 33.3254 2.34214L32.8573 9.37446C32.8098 10.0874 32.5265 10.7747 32.061 11.3108L28.1122 15.8556C27.6056 16.4377 26.8771 16.7718 26.112 16.7725C25.5625 16.7731 25.0071 16.7948 24.4609 16.8376C23.145 16.9409 21.8311 17.1658 20.5557 17.5065C20.1787 17.6071 19.8004 17.7196 19.4319 17.84C19.0119 17.9768 18.5614 18.0064 18.1278 17.9261L10.4423 16.4949C10.0803 16.4272 9.74438 16.2858 9.44228 16.074L3.10591 11.6133C2.91253 11.4772 2.68596 11.4055 2.45091 11.4055C2.12146 11.4055 1.80764 11.5482 1.59018 11.7975C1.38704 12.0297 1.28612 12.3276 1.305 12.6367C1.32388 12.9459 1.46126 13.2287 1.6911 13.4339L7.09641 18.2517C7.82823 18.9041 8.66097 19.4152 9.57054 19.771C10.9033 20.2926 12.8279 21.049 14.4257 21.6909C15.3099 22.0461 16.0033 22.3289 16.4857 22.5328C16.7657 22.6512 16.974 22.7419 17.1218 22.8103C17.3152 22.8998 17.6134 23.0379 17.7007 23.3378C18.9722 25.8608 20.2431 29.4855 21.4281 33.0326L20.193 33.4516Z" />
                                      <path d="M17.3002 50.1096L16.8419 49.6407H16.1927C16.1927 49.5486 16.2116 49.4552 16.2487 49.371L20.988 38.6153C21.0303 38.5206 21.0668 38.4246 21.1013 38.3207L22.3357 38.739C22.2882 38.8824 22.2342 39.0218 22.1762 39.1527L17.4467 49.8867C17.4142 49.9695 17.3647 50.0458 17.3002 50.1096Z" />
                                      <path d="M25.7488 23.4049C25.558 23.4049 25.3718 23.3201 25.2461 23.1649L20.3597 17.1665L21.365 16.3305L25.1348 20.9575L25.2357 16.101L26.5379 16.1286L26.3999 22.7604C26.394 23.0353 26.2195 23.278 25.9623 23.3681C25.892 23.3931 25.8204 23.4049 25.7488 23.4049Z" />
                                      <path d="M26.3828 22.5993L25.1145 22.8973L26.4357 28.6341L27.704 28.336L26.3828 22.5993Z" />
                                      <path d="M34.1868 32.5472L32.9159 32.2592C33.3137 30.4675 35.0189 29.6329 36.5333 29.6007C37.0588 29.5895 37.5731 29.6454 38.0699 29.6987C38.8043 29.7782 39.4984 29.8532 40.1482 29.7085C41.6125 29.3823 42.9934 27.8505 43.9368 25.5064C44.3294 24.5303 44.6439 23.4753 44.9473 22.4552C45.3002 21.2707 45.6648 20.0453 46.1635 18.8923C46.9006 17.1895 47.9625 15.6261 49.2334 14.3712C50.5134 13.1077 52.0129 12.1494 53.5709 11.6002L54 12.842C51.1938 13.8319 48.7106 16.2911 47.3563 19.4192C46.8888 20.4992 46.536 21.6863 46.1941 22.8334C45.8816 23.8831 45.5587 24.9677 45.1433 26.0016C44.4929 27.6183 43.0149 30.4169 40.4288 30.993C39.5706 31.1844 38.7373 31.0943 37.9312 31.0069C37.454 30.9549 37.0028 30.9069 36.5607 30.9161C35.5541 30.9378 34.4297 31.4502 34.1868 32.5472Z" />
                                      <path d="M25.4108 40.9516L24.3795 40.1485C26.6193 37.2137 27.2319 33.7555 26.4265 28.5858C26.3718 28.2352 26.6023 27.9044 26.9474 27.8373C27.2925 27.7709 27.6278 27.9925 27.7046 28.3385C28.6897 32.7393 29.6885 35.8641 34.4141 39.0731L33.6874 40.1649C30.6768 38.1207 29.0511 36.0667 28.0145 33.7916C27.8179 36.6093 26.965 38.9159 25.4108 40.9516Z" />
                                    </svg>
                                  </div>
                                  <h6>
                                    {language === "en"
                                      ? service?.title
                                      : service?.titlefr}
                                  </h6>
                                  
                                </div>
                              </li>
                            );
                          })}
                        </ul>
                      </div>
                    </div>
                    {/* ----Tabs CONTENT--- */}
                    <div className="col-xl-7 d-flex justify-content-xl-start justify-content-center">
                      <div className="tab-content" id="pills-tab3Content">
                        {data?.books?.map((service, index) => {
                          return (
                            <div
                            key={index}
                              className={`${
                                activeTab === index
                                  ? "block"
                                  : "hidden"
                              }`}
                            >
                              <div className="tab-content-wrap">
                                <h2>{language ==='en' ? service?.title : service?.titlefr}</h2>
                                <p>
                           {language === 'en'  ? service?.subdesc : service?.subdescfr}
                                </p>
                                <ul>
                                  {/* <li>
                                    <svg
                                      xmlns="http://www.w3.org/2000/svg"
                                      width={9}
                                      height={9}
                                      viewBox="0 0 9 9"
                                    >
                                      <circle cx="4.5" cy="4.5" r="4.5" />
                                    </svg>
                                    Treetop Views
                                  </li>
                                  <li>
                                    <svg
                                      xmlns="http://www.w3.org/2000/svg"
                                      width={9}
                                      height={9}
                                      viewBox="0 0 9 9"
                                    >
                                      <circle cx="4.5" cy="4.5" r="4.5" />
                                    </svg>
                                    Adrenaline Rush
                                  </li>
                                  <li>
                                    <svg
                                      xmlns="http://www.w3.org/2000/svg"
                                      width={9}
                                      height={9}
                                      viewBox="0 0 9 9"
                                    >
                                      <circle cx="4.5" cy="4.5" r="4.5" />
                                    </svg>
                                    Safety Measures
                                  </li>
                                  <li>
                                    <svg
                                      xmlns="http://www.w3.org/2000/svg"
                                      width={9}
                                      height={9}
                                      viewBox="0 0 9 9"
                                    >
                                      <circle cx="4.5" cy="4.5" r="4.5" />
                                    </svg>
                                    Nature Immersion
                                  </li> */}


                                </ul>
                                <div className="content-bottom-area">
                                  <Link
                                    href={`/services/${service?._id}`}
                                    className="primary-btn3"
                                  >
                                    {language === "en"
                                      ? "Check Service details"
                                      : "Vérifier les détails du service" }
                                  </Link>
                                  <a
                                    style={{ cursor: "pointer" }}
                                    onClick={() => setOpen(true)}
                                    className="video-area video1"
                                  > 
                                     <div className="icon">
                                      <svg
                                        className="video-circle"
                                        xmlns="http://www.w3.org/2000/svg"
                                        xmlnsXlink="http://www.w3.org/1999/xlink"
                                        x="0px"
                                        y="0px"
                                        width="51px"
                                        viewBox="0 0 206 206"
                                        style={{
                                          enableBackground: "new 0 0 206 206",
                                        }}
                                        xmlSpace="preserve"
                                      >
                                        <circle
                                          className="circle"
                                          strokeMiterlimit={10}
                                          cx={103}
                                          cy={103}
                                          r={100}
                                        />
                                        <path
                                          className="circle-half top-half"
                                          strokeWidth={4}
                                          strokeMiterlimit={10}
                                          d="M16.4,53C44,5.2,105.2-11.2,153,16.4s64.2,88.8,36.6,136.6"
                                        />
                                        <path
                                          className="circle-half bottom-half"
                                          strokeWidth={4}
                                          strokeMiterlimit={10}
                                          d="M189.6,153C162,200.8,100.8,217.2,53,189.6S-11.2,100.8,16.4,53"
                                        />
                                      </svg>
                                      <i className="bi bi-play" />
                                    </div>
                                    <h6>Watch Cultural</h6>
                                   </a> 
                                </div>
                              </div>
                            </div>
                          );
                        })}
                      </div>
                    </div>
                  </div>
                </div>
              )}
          </div>
        </div>
      </div>
      <ModalVideo
        channel="youtube"
        onClick={() => setOpen(true)}
        isOpen={isOpen}
        animationSpeed="350"
        videoId="r4KpWiK08vM"
        ratio="16:9"
        onClose={() => setOpen(false)}
      />
    </div>
  )
}